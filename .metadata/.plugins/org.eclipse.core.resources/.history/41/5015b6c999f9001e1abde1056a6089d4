package com.footballorg.helpers;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.springframework.web.multipart.MultipartFile;

import com.footballorg.models.Team;

public class CSVHelper 
{
	public static String TYPE = "text/csv";
	static String[] HEADERS = {"ID","Name", "League", "Conference","Network", "Date", "Time"};
	static DateFormat dateFormat = new SimpleDateFormat("hh:mm:ss");
	
	public static boolean hasCSVFormat(MultipartFile file)
	{
		if(!TYPE.equals(file.getContentType()))
		{
			return false;
		}
		return true;
	}
	
	public static List<Team> csvTeamsImport(InputStream is)
	{
		try(BufferedReader fileReader = new BufferedReader(new InputStreamReader(is, "UTF-8"));
			CSVParser csvParser = new CSVParser(fileReader, CSVFormat.DEFAULT.withFirstRecordAsHeader().withIgnoreHeaderCase().withTrim());
			)
		{
			List<Team> teams = new ArrayList<Team>();
			
			Iterable<CSVRecord> csvRecords = csvParser.getRecords();
			
			for(CSVRecord csvRecord : csvRecords)
			{
				Team team = new Team(
						Integer.getInteger(csvRecord.get("id")), 
						csvRecord.get("name"),
						csvRecord.get("league"),
						csvRecord.get("conference"),
						csvRecord.get("network"),
						csvRecord.get("date"),
						csvRecord.get("time")
						);
				teams.add(team);
			}
			return teams;
		} 
		catch (IOException e)
		{
			throw new RuntimeException("fail to parse csv file: " + e.getMessage());
		}
		
	}
}
